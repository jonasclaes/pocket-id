"use strict";(self.webpackChunkpocket_id_docs=self.webpackChunkpocket_id_docs||[]).push([[377],{2304:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"guides/proxy-services","title":"Proxy Services","description":"The goal of Pocket ID is to function exclusively as an OIDC provider. As such, we don\'t have a built-in proxy provider. However, you can use other tools that act as a middleware to protect your services and support OIDC as an authentication provider.","source":"@site/docs/guides/proxy-services.md","sourceDirName":"guides","slug":"/guides/proxy-services","permalink":"/guides/proxy-services","draft":false,"unlisted":false,"editUrl":"https://github.com/stonith404/pocket-id/edit/main/docs/docs/guides/proxy-services.md","tags":[],"version":"current","frontMatter":{"id":"proxy-services"},"sidebar":"docsSidebar","previous":{"title":"LDAP Synchronization","permalink":"/configuration/ldap"},"next":{"title":"Client Examples","permalink":"/client-examples"}}');var o=i(4848),r=i(8453);const a={id:"proxy-services"},c="Proxy Services",s={},d=[{value:"Reverse Proxy",id:"reverse-proxy",level:2},{value:"Caddy",id:"caddy",level:3},{value:"1. Create a new OIDC client in Pocket ID.",id:"1-create-a-new-oidc-client-in-pocket-id",level:4},{value:"2. Install caddy-security",id:"2-install-caddy-security",level:4},{value:"3. Create your Caddyfile",id:"3-create-your-caddyfile",level:4},{value:"4. Start Caddy",id:"4-start-caddy",level:4},{value:"5. Access the service",id:"5-access-the-service",level:4},{value:"OAuth2 Proxy",id:"oauth2-proxy",level:2},{value:"Docker Installation",id:"docker-installation",level:3},{value:"1. Add OAuth2 proxy to the service that should be proxied.",id:"1-add-oauth2-proxy-to-the-service-that-should-be-proxied",level:4},{value:"2. Create a new OIDC client in Pocket ID.",id:"2-create-a-new-oidc-client-in-pocket-id",level:4},{value:"3. Create a configuration file for OAuth2 Proxy.",id:"3-create-a-configuration-file-for-oauth2-proxy",level:4},{value:"4. Start the services.",id:"4-start-the-services",level:4},{value:"5. Access the service.",id:"5-access-the-service-1",level:4},{value:"Standalone Installation",id:"standalone-installation",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"proxy-services",children:"Proxy Services"})}),"\n",(0,o.jsx)(t.p,{children:"The goal of Pocket ID is to function exclusively as an OIDC provider. As such, we don't have a built-in proxy provider. However, you can use other tools that act as a middleware to protect your services and support OIDC as an authentication provider."}),"\n",(0,o.jsx)(t.p,{children:"There are two ways to do this:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Implement OIDC into your reverse proxy"}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/",children:"OAuth2 Proxy"})]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"reverse-proxy",children:"Reverse Proxy"}),"\n",(0,o.jsx)(t.p,{children:"Almost every reverse proxy somehow supports protecting your services with OIDC. Currently only Caddy is documented but you can search on Google for your reverse proxy and OIDC."}),"\n",(0,o.jsx)(t.p,{children:"We would really appreciate if you contribute to this documentation by adding your reverse proxy and how to configure it with Pocket ID."}),"\n",(0,o.jsx)(t.h3,{id:"caddy",children:"Caddy"}),"\n",(0,o.jsxs)(t.p,{children:["With ",(0,o.jsx)(t.a,{href:"https://github.com/greenpau/caddy-security",children:"caddy-security"})," you can easily protect your services with Pocket ID."]}),"\n",(0,o.jsx)(t.h4,{id:"1-create-a-new-oidc-client-in-pocket-id",children:"1. Create a new OIDC client in Pocket ID."}),"\n",(0,o.jsxs)(t.p,{children:["Create a new OIDC client in Pocket ID by navigating to ",(0,o.jsx)(t.code,{children:"https://<your-domain>/settings/admin/oidc-clients"}),". Now enter ",(0,o.jsx)(t.code,{children:"https://<domain-of-proxied-service>/auth/oauth2/generic/authorization-code-callback"})," as the callback URL. After adding the client, you will obtain the client ID and client secret, which you will need in the next step."]}),"\n",(0,o.jsx)(t.h4,{id:"2-install-caddy-security",children:"2. Install caddy-security"}),"\n",(0,o.jsx)(t.p,{children:"Run the following command to install caddy-security:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"caddy add-package github.com/greenpau/caddy-security\n"})}),"\n",(0,o.jsx)(t.h4,{id:"3-create-your-caddyfile",children:"3. Create your Caddyfile"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'{\n  \t# Port to listen on\n\thttp_port 443\n\n  \t#\xa0Configure caddy-security.\n\torder authenticate before respond\n\tsecurity {\n\t\toauth identity provider generic {\n\t\t\tdelay_start 3\n\t\t\trealm generic\n\t\t\tdriver generic\n\t\t\tclient_id client-id-from-pocket-id # Replace with your own client ID\n\t\t\tclient_secret client-secret-from-pocket-id # Replace with your own client secret\n\t\t\tscopes openid email profile\n\t\t\tbase_auth_url http://localhost\n\t\t\tmetadata_url http://localhost/.well-known/openid-configuration\n\t\t}\n\n\t\tauthentication portal myportal {\n\t\t\tcrypto default token lifetime 3600 #\xa0Seconds until you have to re-authenticate\n\t\t\tenable identity provider generic\n\t\t\tcookie insecure off #\xa0Set to "on" if you\'re not using HTTPS\n\n\t\t\ttransform user {\n\t\t\t\tmatch realm generic\n\t\t\t\taction add role user\n\t\t\t}\n\t\t}\n\n\t\tauthorization policy mypolicy {\n\t\t\tset auth url /auth/oauth2/generic\n\t\t\tallow roles user\n\t\t\tinject headers with claims\n\t\t}\n\t}\n}\n\nhttps://<domain-of-your-service> {\n\t@auth {\n\t\tpath /auth/oauth2/generic\n\t\tpath /auth/oauth2/generic/authorization-code-callback\n    }\n\n\troute @auth {\n\t\tauthenticate with myportal\n\t}\n\n\troute /* {\n\t\tauthorize with mypolicy\n\t\treverse_proxy http://<service-to-be-proxied>:<port> # Replace with your own service\n\t}\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["For additional configuration options, refer to the official ",(0,o.jsx)(t.a,{href:"https://docs.authcrunch.com/docs/intro",children:"caddy-security documentation"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"4-start-caddy",children:"4. Start Caddy"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"caddy run --config Caddyfile\n"})}),"\n",(0,o.jsx)(t.h4,{id:"5-access-the-service",children:"5. Access the service"}),"\n",(0,o.jsx)(t.p,{children:"Your service should now be protected by Pocket ID."}),"\n",(0,o.jsx)(t.h2,{id:"oauth2-proxy",children:"OAuth2 Proxy"}),"\n",(0,o.jsx)(t.h3,{id:"docker-installation",children:"Docker Installation"}),"\n",(0,o.jsx)(t.h4,{id:"1-add-oauth2-proxy-to-the-service-that-should-be-proxied",children:"1. Add OAuth2 proxy to the service that should be proxied."}),"\n",(0,o.jsxs)(t.p,{children:["To configure OAuth2 Proxy with Pocket ID, you have to add the following service to the service that should be proxied. E.g., if ",(0,o.jsx)(t.a,{href:"https://github.com/louislam/uptime-kuma",children:"Uptime Kuma"})," should be proxied, you can add the following service to the ",(0,o.jsx)(t.code,{children:"docker-compose.yml"})," of Uptime Kuma:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'# Example with Uptime Kuma\n#\xa0uptime-kuma:\n#  image: louislam/uptime-kuma\noauth2-proxy:\n  image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0\n  command: --config /oauth2-proxy.cfg\n  volumes:\n    - "./oauth2-proxy.cfg:/oauth2-proxy.cfg"\n  ports:\n    - 4180:4180\n'})}),"\n",(0,o.jsx)(t.h4,{id:"2-create-a-new-oidc-client-in-pocket-id",children:"2. Create a new OIDC client in Pocket ID."}),"\n",(0,o.jsxs)(t.p,{children:["Create a new OIDC client in Pocket ID by navigating to ",(0,o.jsx)(t.code,{children:"https://<your-domain>/settings/admin/oidc-clients"}),". Now enter ",(0,o.jsx)(t.code,{children:"https://<domain-of-proxied-service>/oauth2/callback"})," as the callback URL. After adding the client, you will obtain the client ID and client secret, which you will need in the next step."]}),"\n",(0,o.jsx)(t.h4,{id:"3-create-a-configuration-file-for-oauth2-proxy",children:"3. Create a configuration file for OAuth2 Proxy."}),"\n",(0,o.jsxs)(t.p,{children:["Create a configuration file named ",(0,o.jsx)(t.code,{children:"oauth2-proxy.cfg"})," in the same directory as your ",(0,o.jsx)(t.code,{children:"docker-compose.yml"})," file of the service that should be proxied (e.g. Uptime Kuma). This file will contain the necessary configurations for OAuth2 Proxy to work with Pocket ID."]}),"\n",(0,o.jsxs)(t.p,{children:["Here is the recommend ",(0,o.jsx)(t.code,{children:"oauth2-proxy.cfg"})," configuration:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cfg",children:'# Replace with your own credentials\nclient_id="client-id-from-pocket-id"\nclient_secret="client-secret-from-pocket-id"\noidc_issuer_url="https://<your-pocket-id-domain>"\n\n# Replace with a secure random string\ncookie_secret="random-string"\n\n# Upstream servers (e.g http://uptime-kuma:3001)\nupstreams="http://<service-to-be-proxied>:<port>"\n\n# Additional Configuration\nprovider="oidc"\nscope = "openid email profile groups"\n\n# If you are using a reverse proxy in front of OAuth2 Proxy\nreverse_proxy = true\n\n# Email domains allowed for authentication\nemail_domains = ["*"]\n\n# If you are using HTTPS\ncookie_secure="true"\n\n# Listen on all interfaces\nhttp_address="0.0.0.0:4180"\n'})}),"\n",(0,o.jsxs)(t.p,{children:["For additional configuration options, refer to the official ",(0,o.jsx)(t.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview",children:"OAuth2 Proxy documentation"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"4-start-the-services",children:"4. Start the services."}),"\n",(0,o.jsx)(t.p,{children:"After creating the configuration file, you can start the services using Docker Compose:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,o.jsx)(t.h4,{id:"5-access-the-service-1",children:"5. Access the service."}),"\n",(0,o.jsxs)(t.p,{children:["You can now access the service through OAuth2 Proxy by visiting ",(0,o.jsx)(t.code,{children:"http://localhost:4180"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"standalone-installation",children:"Standalone Installation"}),"\n",(0,o.jsx)(t.p,{children:"Setting up OAuth2 Proxy with Pocket ID without Docker is similar to the Docker setup. As the setup depends on your environment, you have to adjust the steps accordingly but is should be similar to the Docker setup."}),"\n",(0,o.jsxs)(t.p,{children:["You can visit the official ",(0,o.jsx)(t.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/installation",children:"OAuth2 Proxy documentation"})," for more information."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var n=i(6540);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);